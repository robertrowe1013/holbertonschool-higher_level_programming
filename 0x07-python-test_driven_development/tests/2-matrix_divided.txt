>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2], [4, 5]], 2)
[[0.5, 1.0], [2.0, 2.5]]

>>> matrix_divided([[1, 2], [4, 5]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [4, 5]], "2")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([["1", "2"], [4, 5]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[float('inf'), 2], [4, 5]], 2)
[[inf, 1.0], [2.0, 2.5]]

>>> matrix_divided([[1, 2], [4, 5]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[1, 2], [4, 5]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
